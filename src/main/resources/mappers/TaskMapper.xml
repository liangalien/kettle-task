<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangalien.kt.dao.TaskDAO">
    <sql id="select">
        t.*,
        p.`key` as project_key,
        p.name as project_name,
        fr.file_name as repo_name,
        fr.file_type as repo_type,
        fr.file_img as repo_img,
        cu.nickname as create_by_name,
        uu.nickname as update_by_name
    </sql>
    <select id="selectById" resultType="com.liangalien.kt.dto.TaskDTO">
        select
            <include refid="select"></include>
        from kt_task t
        join kt_project p on t.project_id=p.id
        join kt_file_repo fr on fr.id = t.repo_id
        left join kt_user cu on t.create_by=cu.username
        left join kt_user uu on t.update_by=uu.username
        where fr.is_deleted = 0 and t.is_deleted = 0 and t.id = #{id}
    </select>

    <select id="selectByRepoId" resultType="com.liangalien.kt.dto.TaskDTO">
        select
            <include refid="select"></include>
        from kt_task t
        join kt_project p on t.project_id=p.id
        join kt_file_repo fr on fr.id = t.repo_id
        left join kt_user cu on t.create_by=cu.username
        left join kt_user uu on t.update_by=uu.username
        where fr.is_deleted = 0 and t.is_deleted = 0 and t.repo_id = #{repoId}
    </select>

    <select id="selectAll" resultType="com.liangalien.kt.dto.TaskDTO">
        select
            <include refid="select"></include>
        from kt_task t join kt_project p on t.project_id=p.id
        join kt_file_repo fr on fr.id = t.repo_id
        left join kt_user cu on t.create_by=cu.username
        left join kt_user uu on t.update_by=uu.username
        where fr.is_deleted = 0 and t.is_deleted = 0
        <if test="search != null and search.project_id != null">
            and t.project_id = #{search.project_id}
        </if>
        <if test="search != null and search.status != null">
            and t.status = #{search.status}
        </if>
        <if test="search != null and search.repo_type != null">
            and fr.file_type = #{search.repo_type}
        </if>
        <if test="search != null and search.start != null and search.end != null">
            and last_start_time between #{search.start} and #{search.end}
        </if>
        <if test="search != null and search.keyword != null">
            and t.name like concat('%', #{search.keyword} ,'%')
        </if>
    </select>

    <update id="update" parameterType="com.liangalien.kt.dto.TaskDTO">
        update kt_task
        <set>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="repoId != null">
                repo_id = #{repoId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="lastStartTime != null">
                last_start_time = #{lastStartTime},
            </if>
            <if test="lastEndTime != null">
                last_end_time = #{lastEndTime},
            </if>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="logLevel != null">
                log_level = #{logLevel},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateStatus">
        update kt_task set status=#{status} where id=#{id}
    </update>


    <update id="remove">
        update kt_task set is_deleted=1 and update_by=#{updateBy} where id=#{id}
    </update>

    <update id="removeByRepoId">
        update kt_task set is_deleted=1 and update_by=#{updateBy} where repo_id=#{repoId}
    </update>

    <insert id="insert" parameterType="com.liangalien.kt.dto.TaskDTO">
        insert into kt_task (project_id, repo_id, name, description, log_level, create_by, update_by)
        values(#{projectId}, #{repoId}, #{name}, #{description}, #{logLevel}, #{createBy}, #{createBy})
    </insert>
</mapper>